{"version":3,"sources":["Components/Form/Form.styles.js","redux/contacts/contacts-actions.js","Components/Form/Form.js","Components/ContactList/ContactList.styles.js","Components/ContactList/ContactList.js","Components/Filter/Filter.styles.js","Components/Filter/Filter.js","App.styles.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["BlankPhonebook","styled","form","Label","label","Input","input","Button","button","add","createAction","name","number","payload","id","shortid","generate","remove","filter","connect","dispatch","onSubmit","contactsActions","useState","setName","setNumber","handelChange","e","target","value","preventDefault","type","pattern","title","required","onChange","List","ul","Item","li","state","contacts","options","items","el","toLowerCase","includes","onDelete","map","onClick","Filter","placeholder","defaultProps","Wrapper","div","App","createReducer","actions","alert","_","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"qQAEaA,EAAiBC,IAAOC,KAAV,sNAWdC,EAAQF,IAAOG,MAAV,oDAILC,EAAQJ,IAAOK,MAAV,0KAULC,EAASN,IAAOO,OAAV,+L,wBCZJ,GACbC,IAbUC,YAAa,gBAAgB,SAACC,EAAMC,GAAP,MAAmB,CAC1DC,QAAS,CACPC,GAAIC,IAAQC,WACZL,OACAC,cAUFK,OANaP,YAAa,mBAO1BQ,OALaR,YAAa,oB,OCwD5B,I,QAIeS,cAAQ,MAJI,SAACC,GAAD,MAAe,CACxCC,SAAU,SAACV,EAAMC,GAAP,OAAkBQ,EAASE,EAAgBb,IAAIE,EAAMC,QAGlDO,EApEf,YAA6B,IAAbE,EAAY,EAAZA,SACd,EAAwBE,mBAAS,IAAjC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOX,EAAP,KAAea,EAAf,KAEMC,EAAe,SAACC,GACpB,MAAwBA,EAAEC,OAAlBjB,EAAR,EAAQA,KAAMkB,EAAd,EAAcA,MAEd,OAAQlB,GACN,IAAK,OACHa,EAAQK,GACR,MAEF,IAAK,SACHJ,EAAUI,GACV,MAEF,QACE,SAgBN,OACE,eAAC7B,EAAD,CAAgBqB,SARG,SAACM,GACpBA,EAAEG,iBAEFT,EAASV,EAAMC,GAPfY,EAAQ,IACRC,EAAU,KAWV,UACE,eAACtB,EAAD,kBAEE,cAACE,EAAD,CACE0B,KAAK,OACLpB,KAAK,OACLqB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUT,EACVG,MAAOlB,OAGX,eAACR,EAAD,oBAEE,cAACE,EAAD,CACE0B,KAAK,MACLpB,KAAK,SACLqB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUT,EACVG,MAAOjB,OAGX,cAACL,EAAD,gCC9DO6B,EAAOnC,IAAOoC,GAAV,iDAIJC,EAAOrC,IAAOsC,GAAV,oDAIJhC,EAASN,IAAOO,OAAV,qMC2BJW,eAhBS,SAACqB,GACvB,MAA0BA,EAAMC,SAAxBvB,EAAR,EAAQA,OAMR,MAAO,CACLwB,QAPF,EAAgBC,MAEczB,QAAO,SAAC0B,GACpC,OAAOA,EAAGjC,KAAKkC,cAAcC,SAAS5B,EAAO2B,sBAQtB,SAACzB,GAAD,MAAe,CACxC2B,SAAU,SAACjC,GAAD,OAAQM,EAASE,EAAgBL,OAAOH,QAGrCK,EA/BK,SAAC,GAA2B,IAAzBuB,EAAwB,EAAxBA,QAASK,EAAe,EAAfA,SAC9B,OACE,cAACX,EAAD,UACGM,EAAQM,KAAI,YAA2B,IAAxBrC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,OAAQE,EAAS,EAATA,GAC5B,OACE,eAACwB,EAAD,WACG3B,EADH,KACWC,EACT,cAAC,EAAD,CAAQqC,QAAS,kBAAMF,EAASjC,IAAhC,sBAFSA,WCTRT,EAAQJ,IAAOK,MAAV,0KCIZ4C,EAAS,SAAC,GAAsC,IAApCnB,EAAmC,EAAnCA,KAAM3B,EAA6B,EAA7BA,MAAOyB,EAAsB,EAAtBA,MAAOM,EAAe,EAAfA,SACpC,OACE,qCACE,uDACA,cAAC,EAAD,CACEJ,KAAMA,EACNI,SAAUA,EACVgB,YAAa/C,EACbyB,MAAOA,QAMfqB,EAAOE,aAAe,CACpBrB,KAAM,QAGR,I,EAQeZ,eARS,SAACqB,GAAD,MAAY,CAClCX,MAAOW,EAAMC,SAASvB,WAGG,SAACE,GAAD,MAAe,CACxCe,SAAU,SAACR,GAAD,OAAOP,EAASE,EAAgBJ,OAAOS,EAAEC,OAAOC,YAG7CV,CAA6C+B,GC9B/CG,EAAUpD,IAAOqD,IAAV,mDCIL,SAASC,IACtB,OACE,eAACF,EAAD,WACE,2CACA,cAAC,EAAD,IACA,0CACA,cAAC,EAAD,CAAQjD,MAAM,uBACd,cAAC,EAAD,O,oECTAuC,EAAQa,YAAc,GAAD,eACxBC,EAAQhD,KAAM,SAAC+B,EAAD,GAAyB,IAAf3B,EAAc,EAAdA,QAGvB,OAFoB2B,EAAMQ,KAAI,SAACJ,GAAD,OAAQA,EAAGjC,QAEzBmC,SAASjC,EAAQF,OAC/B+C,MAAM,GAAD,OAAI7C,EAAQF,KAAZ,4BACE6B,GAEH,CAAE3B,GAAR,mBAAoB2B,QAIlBtB,EAASsC,YAAc,GAAD,eACzBC,EAAQvC,QAAS,SAACyC,EAAD,YAAM9C,YAGX+C,cAAgB,CAC7BjB,QACAzB,WCPI2C,EAAgB,CACpBC,IAAK,WACLC,YACAC,UAAW,CAAC,WAGRC,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGIC,EAAQC,YAAe,CAC3BC,QAAS,CACPrC,SAAUsC,YAAelB,EAAemB,IAE1Cf,aACAgB,UAAUC,IAKG,IAAEN,QAAOO,UAFNC,YAAaR,IC9B/BS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,GAAMA,MAAvB,SACE,cAAC,cAAD,CAAaY,QAAS,KAAML,UAAWP,GAAMO,UAA7C,SACE,cAAC5B,EAAD,UAINkC,SAASC,eAAe,W","file":"static/js/main.f88ce957.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const BlankPhonebook = styled.form`\n  border: 5px solid #21ce3b;\n  width: 400px;\n  margin: 0 auto;\n  padding: 25px 15px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 25px;\n`;\n\nexport const Input = styled.input`\n  border: 3px solid #48dca9;\n  border-radius: 5px;\n  width: 300px;\n  margin-left: 15px;\n  &:focus {\n    background-color: #47dca9;\n  }\n`;\n\nexport const Button = styled.button`\n  border-color: aliceblue;\n  border-radius: 5px;\n  cursor: pointer;\n  background-color: #47dca9;\n  width: 95px;\n  &:focus {\n    border-color: #21ce3b;\n  }\n`;\n","import shortid from \"shortid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst add = createAction(\"contacts/add\", (name, number) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nconst remove = createAction(\"contacts/remove\");\n\nconst filter = createAction(\"contacts/filter\");\n\nexport default {\n  add,\n  remove,\n  filter,\n};\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { BlankPhonebook, Input, Button, Label } from \"./Form.styles\";\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\n\nfunction Form({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handelChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    onSubmit(name, number);\n    reset();\n  };\n\n  return (\n    <BlankPhonebook onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handelChange}\n          value={name}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handelChange}\n          value={number}\n        />\n      </Label>\n      <Button>Add contact</Button>\n    </BlankPhonebook>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) => dispatch(contactsActions.add(name, number)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 20px;\n`;\n\nexport const Button = styled.button`\n  border-color: aliceblue;\n  cursor: pointer;\n  border-radius: 5px;\n  background-color: #47dca9;\n  margin-left: 25px;\n  &:focus {\n    border-color: #21ce3b;\n  }\n`;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\nimport PropTypes from \"prop-types\";\nimport { List, Item, Button } from \"./ContactList.styles\";\n\nconst ContactList = ({ options, onDelete }) => {\n  return (\n    <List>\n      {options.map(({ name, number, id }) => {\n        return (\n          <Item key={id}>\n            {name}: {number}\n            <Button onClick={() => onDelete(id)}>Delete</Button>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { filter, items } = state.contacts;\n\n  const visibleContacts = items.filter((el) => {\n    return el.name.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  return {\n    options: visibleContacts,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDelete: (id) => dispatch(contactsActions.remove(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nContactList.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.object),\n  onDelete: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Input = styled.input`\n  border: 3px solid #48dca9;\n  border-radius: 5px;\n  width: 300px;\n  margin-left: 15px;\n  &:focus {\n    background-color: #47dca9;\n  }\n`;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Input } from \"./Filter.styles\";\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\n\nconst Filter = ({ type, label, value, onChange }) => {\n  return (\n    <>\n      <h3>Find contacts by name</h3>\n      <Input\n        type={type}\n        onChange={onChange}\n        placeholder={label}\n        value={value}\n      />\n    </>\n  );\n};\n\nFilter.defaultProps = {\n  type: \"text\",\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(contactsActions.filter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  label: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n","import React from \"react\";\nimport Form from \"./Components/Form/Form\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport { Wrapper } from \"./App.styles\";\n\nexport default function App() {\n  return (\n    <Wrapper>\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter label=\"Enter contact name\" />\n      <ContactList />\n    </Wrapper>\n  );\n}\n","import { combineReducers } from \"redux\";\nimport actions from \"./contacts-actions\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nconst items = createReducer([], {\n  [actions.add]: (state, { payload }) => {\n    const similarName = state.map((el) => el.name);\n\n    if (similarName.includes(payload.name)) {\n      alert(`${payload.name} is already in contacts`);\n      return state;\n    }\n    return [payload, ...state];\n  },\n});\n\nconst filter = createReducer(\"\", {\n  [actions.filter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\nimport contactReducer from \"./contacts/contacts-reducer\";\n\nconst persistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistConfig, contactReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}