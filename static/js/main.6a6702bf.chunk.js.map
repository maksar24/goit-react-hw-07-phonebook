{"version":3,"sources":["Components/Loader/Loader.module.css","Components/Form/Form.styles.js","Components/Form/Form.js","Components/ContactList/ContactList.styles.js","Components/ContactList/ContactList.js","Components/Filter/Filter.styles.js","redux/contacts/contacts-actions.js","Components/Filter/Filter.js","App.styles.js","redux/contacts/slices/contactsSlice.js","Components/Loader/Loader.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","BlankPhonebook","styled","form","Label","label","Input","input","Button","button","Form","onSubmit","useState","name","setName","number","setNumber","handelChange","e","target","value","preventDefault","type","pattern","title","required","onChange","List","ul","Item","li","ContactList","options","onDelete","map","id","onClick","add","createAction","payload","shortid","generate","remove","filter","Filter","placeholder","defaultProps","connect","state","contacts","dispatch","contactsActions","Wrapper","div","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","createContact","mutation","newContacts","url","method","body","invalidatesTags","deleteContact","contactId","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","CustomLoader","className","styles","Loader","color","height","width","timeout","App","data","isFetching","newContact","el","includes","alert","items","createReducer","actions","_","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a6702bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__12rGh\"};","import styled from \"@emotion/styled\";\n\nexport const BlankPhonebook = styled.form`\n  border: 5px solid #21ce3b;\n  width: 400px;\n  margin: 0 auto;\n  padding: 25px 15px;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 25px;\n`;\n\nexport const Input = styled.input`\n  border: 3px solid #48dca9;\n  border-radius: 5px;\n  width: 300px;\n  margin-left: 15px;\n  &:focus {\n    background-color: #47dca9;\n  }\n`;\n\nexport const Button = styled.button`\n  border-color: aliceblue;\n  border-radius: 5px;\n  cursor: pointer;\n  background-color: #47dca9;\n  width: 95px;\n  &:focus {\n    border-color: #21ce3b;\n  }\n`;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { BlankPhonebook, Input, Button, Label } from \"./Form.styles\";\n\nexport const Form =({ onSubmit }) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handelChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newContact = {\n      name: name,\n      number: number,\n    };\n\n    onSubmit(newContact);\n    reset();\n  };\n\n  return (\n    <BlankPhonebook onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handelChange}\n          value={name}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handelChange}\n          value={number}\n        />\n      </Label>\n      <Button>Add contact</Button>\n    </BlankPhonebook>\n  );\n};\n\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n};","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 20px;\n`;\n\nexport const Button = styled.button`\n  border-color: aliceblue;\n  cursor: pointer;\n  border-radius: 5px;\n  background-color: #47dca9;\n  margin-left: 25px;\n  &:focus {\n    border-color: #21ce3b;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List, Item, Button } from \"./ContactList.styles\";\n\nexport const ContactList = ({ options, onDelete }) => {\n  return (\n    <List>\n      {options.map(({ name, number, id }) => {\n        return (\n          <Item key={id}>\n            {name}: {number}\n            <Button onClick={() => onDelete(id)}>Delete</Button>\n          </Item>\n        );\n      })}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.object),\n  onDelete: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Input = styled.input`\n  border: 3px solid #48dca9;\n  border-radius: 5px;\n  width: 300px;\n  margin-left: 15px;\n  &:focus {\n    background-color: #47dca9;\n  }\n`;\n","import shortid from \"shortid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst add = createAction(\"contacts/add\", (name, number) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst remove = createAction(\"contacts/remove\", (id) => ({\r\n  payload: id,\r\n}));\r\n\r\nconst filter = createAction(\"contacts/filter\");\r\n\r\nexport default {\r\n  add,\r\n  remove,\r\n  filter,\r\n};\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Input } from \"./Filter.styles\";\nimport contactsActions from \"../../redux/contacts/contacts-actions\";\n\nconst Filter = ({ type, label, value, onChange }) => {\n  return (\n    <>\n      <h3>Find contacts by name</h3>\n      <Input\n        type={type}\n        onChange={onChange}\n        placeholder={label}\n        value={value}\n      />\n    </>\n  );\n};\n\nFilter.defaultProps = {\n  type: \"text\",\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(contactsActions.filter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  label: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  text-align: center;\n`;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactsApi = createApi({\r\n    reducerPath: 'contactsApi',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: 'https://616742b1ba841a001727c2c5.mockapi.io/api/v1/'\r\n    }),\r\n    tagTypes: ['Contacts'],\r\n    endpoints: builder => ({\r\n        fetchContacts: builder.query({\r\n            query: () => '/contacts',\r\n            providesTags: ['Contacts'],\r\n        }),\r\n        createContact: builder.mutation({\r\n            query: newContacts => ({\r\n                url: '/contacts',\r\n                method: 'POST',\r\n                body: newContacts,\r\n            }),\r\n            invalidatesTags: ['Contacts'],\r\n        }),\r\n        deleteContact: builder.mutation({\r\n            query: contactId => ({\r\n                url: `/contacts/${contactId}`,\r\n                method: 'DELETE',\r\n            }),\r\n            invalidatesTags: ['Contacts'],\r\n        }),\r\n    }),\r\n});\r\n\r\nexport const {\r\n    useFetchContactsQuery,\r\n    useDeleteContactMutation,\r\n    useCreateContactMutation,\r\n} = contactsApi;","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport styles from \"./Loader.module.css\";\n\nexport const CustomLoader = () => {\n  return (\n    <Loader\n      className={styles.Loader}\n      type=\"Rings\"\n      color=\"#00FA9A\"\n      height={800}\n      width={900}\n      timeout={3000}\n    />\n  );\n};\n","import React from \"react\";\nimport {Form} from \"./Components/Form/Form\";\nimport {ContactList} from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport { Wrapper } from \"./App.styles\";\nimport {\n  useFetchContactsQuery,\n  useDeleteContactMutation,\n  useCreateContactMutation\n} from \"./redux/contacts/slices/contactsSlice\";\nimport { CustomLoader } from './Components/Loader/Loader';\n\nexport default function App() {\n  const { data, isFetching } = useFetchContactsQuery();\n  const [deleteContact] = useDeleteContactMutation();\n  const [createContact] = useCreateContactMutation();\n\n  const addNewContact = (newContact) => {\n    const similarName = data.map((el) => el.name);\n\n    if (similarName.includes(newContact.name)) {\n      alert(`${newContact.name} is already in contacts`);\n    } else {\n      createContact(newContact);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <h1>Phonebook</h1>\n      <Form onSubmit={addNewContact} />\n      <h2>Contacts</h2>\n      <Filter label=\"Enter contact name\" />\n      {isFetching && <CustomLoader />}\n      {data && <ContactList options={data} onDelete={deleteContact} />}\n    </Wrapper>\n  );\n};","import { combineReducers } from \"redux\";\r\nimport actions from \"./contacts-actions\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst items = createReducer([], {\r\n  [actions.add]: (state, { payload }) => {\r\n    const similarName = state.map((el) => el.name);\r\n\r\n    if (similarName.includes(payload.name)) {\r\n      alert(`${payload.name} is already in contacts`);\r\n      return state;\r\n    }\r\n    return [payload, ...state];\r\n  },\r\n  [actions.remove]: (state, { payload }) => {\r\n    return state.filter(({ id }) => id !== payload);\r\n  },\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [actions.filter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport contactReducer from \"./contacts/contacts-reducer\";\r\nimport { contactsApi } from \"./contacts/slices/contactsSlice\";\r\n\r\nconst middleware = [...getDefaultMiddleware(), contactsApi.middleware, logger];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}